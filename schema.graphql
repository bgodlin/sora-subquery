type PoolXYKEntity @entity {
  id: ID!
  pools: [Pool] @derivedFrom(field: "poolEntity")
  totalXORInPools: String!
  updated: Date!
}

type Pool @entity {
  id: ID!
  baseAssetId: String!
  targetAssetId: String! @index
  apy: String!
  baseAssetReserves: String!
  targetAssetReserves: String!
  multiplier: BigInt!
  poolEntity: PoolXYKEntity! @index #relation to PoolXYKEntity
  updated: Date!
}

type Swap @entity {
  id: ID!
  blockHash: String!
  extrinsicHash: String!
  baseAssetId: String!
  targetAssetId: String!
  baseAssetAmount: String!
  targetAssetAmount: String!
  address: String! @index
  networkFee: String!
  liquidityProviderFee: String!
  selectedMarket: [String]
  success: Boolean!
  datetime: Date!
}

type Transfer @entity {
  id: ID!
  extrinsiHash: String!
  from: String! @index
  to: String! @index
  blockHash: String!
  assetId: String! @index
  amount: String!
  networkFee: String!
  success: Boolean!
  datetime: Date!
}
