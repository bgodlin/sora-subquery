type PoolXYKEntity @entity {
  id: ID!
  pools: [Pool] @derivedFrom(field: "poolEntity")
  totalXORInPools: String!
  updated: String!
}

type Pool @entity {
  id: ID!
  baseAssetId: String!
  targetAssetId: String! @index
  strategicBonusApy: String
  priceUSD: String
  baseAssetReserves: String!
  targetAssetReserves: String!
  multiplier: BigInt!
  poolEntity: PoolXYKEntity! @index #relation to PoolXYKEntity
  updated: String!
}

type HistoryElement @entity {
  id: ID!
  blockHeight: BigInt!
  blockHash: String! @index
  module: String!
  method: String!
  address: String! @index
  networkFee: String!
  success: Boolean! # for backwards compatibility
  execution: ExecutionResult!
  timestamp: String!
  swap: Swap
  transfer: Transfer
  irohaMigration: irohaMigration
  liquidityOperation: LiquidityOperation
  batchTransaction: [batchTransaction]
  error: Error
  assetRegistration: AssetRegistration
}

type Swap @jsonField {
  baseAssetId: String!
  targetAssetId: String!
  baseAssetAmount: String!
  targetAssetAmount: String!
  liquidityProviderFee: String!
  selectedMarket: String!
}

type Transfer @jsonField {
  from: String! @index
  to: String! @index
  assetId: String!
  amount: String!
}

type LiquidityOperation @jsonField {
  type: String!
  baseAssetId: String!
  targetAssetId: String!
  baseAssetAmount: String!
  targetAssetAmount: String!
}

type irohaMigration @jsonField {
  assetId: String!
  amount: String!
}

type batchTransaction @jsonField {
  callId: String!
  method: String!
  module: String!
  hash: String!
}

type ExecutionResult @jsonField {
  success: Boolean!
  error: Error
}

type Error @jsonField {
  moduleErrorId: Int
  moduleErrorIndex: Int
  nonModuleErrorMessage: String
}

type AssetRegistration @jsonField {
  assetId: String
  data: String
}

type BurnedAssetsAmount @entity {
  id: ID!
  blockHeight: BigInt! @index
  blockHash: String!
  currencyId: String!
  balance: BigInt!
}

type RemintedAssetsAmount @entity {
  id: ID!
  blockHeight: BigInt! @index
  blockHash: String!
  currencyId: String!
  balance: BigInt!
}

type ClaimableReward @entity {
  id: ID!
  blockHeight: BigInt! @index
  blockHash: String!
  from: String!
  currencyId: String!
  balance: BigInt!
}
